name: "automation test"
description: "setup and run automation test"

inputs:
  gh_token:
    required: true
    description: "gh token"
    default: "false"
    type: string

  environment:
    required: true
    description: 'environment'
    default: "false"
    type: string

  dotenv_private_key_secret_dev:
    required: true
    description: 'dotenv private key for dev environment'
    default: "false"
    type: string

  dotenv_private_key_secret_stg:
    required: true
    description: 'dotenv private key for stg environment'
    default: "false"
    type: string

  profile:
    required: false
    description: "profile"
    default: ""
    type: string

  platform:
    required: false
    description: "platform"
    default: ""
    type: string

  setup_pnpm:
    required: false
    description: "setup pnpm"
    default: "false"
    type: string

  setup_bun:
    required: false
    description: "setup bun"
    default: "false"
    type: string

  setup_gh_cli:
    required: false
    description: "setup gh cli"
    default: "false"
    type: string

  github_run_number:
    required: false
    description: "github run number"
    default: ""
    type: string

  custom_command_packages:
    required: false
    description: "custom command packages"
    default: ""
    type: string
  
  custom_command_setup:
    required: true
    description: "custom command setup"
    default: ""
    type: string

  custom_command_run:
    required: false
    description: "custom command run"
    default: ""
    type: string

  create_test_run:
    required: false
    description: "create test run"
    default: ""
    type: string

  setup_rsync:
    required: false
    description: "setup rsync and bc"
    default: ""
    type: string

  custom_command_report_folder:
    required: false
    description: "custom command report folder"
    default: ""
    type: string

  custom_command_report_subfolder:
    required: false
    description: "custom command report subfolder"
    default: ""
    type: string

  insert_testrails:
    required: false
    description: "insert testrails"
    default: ""
    type: string

  custom_command_send_report_to_slack:
    required: false
    description: "custom command send report to slack"
    default: ""
    type: string

  trigger_automation_test_api_when_deploy:
    required: false
    description: "trigger automation test api when deploy"
    default: "false"
    type: string

  service_name:
    required: false
    description: "service name"
    default: ""
    type: string

  deploy_gh_pages:
    required: false
    description: "deploy to gh pages"
    default: ""
    type: string

runs:
  using: "composite"
  steps:
    - name: checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ inputs.gh_token }}

    - name: setup tools sdet
      uses: kitabisa/composite-actions/sdet/tools/setup-tools@api
      with:
        setup_pnpm: ${{ inputs.setup_pnpm }}
        setup_bun: ${{ inputs.setup_bun }}
        setup_gh_cli: ${{ inputs.setup_gh_cli }}

    - name: install packages
      shell: bash
      run: ${{ inputs.custom_command_packages }}

    - name: setup env variables
      shell: bash
      run: |
        if [ "$ENVIRONMENT" == "dev" ]; then
          export DOTENV_PRIVATE_KEY_SECRET=$DOTENV_PRIVATE_KEY_SECRET_DEV
        elif [ "$ENVIRONMENT" == "stg" ]; then
          export DOTENV_PRIVATE_KEY_SECRET=$DOTENV_PRIVATE_KEY_SECRET_STG
        else
          echo "unknown environment: $ENVIRONMENT"
          exit 1
        fi

        echo "environment setup complete with secret key."
        $CUSTOM_COMMAND_SETUP

        echo "TEST_TYPE=$TEST_TYPE" >> $GITHUB_ENV
        echo "GITHUB_RUN_NUMBER=$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
      env:
        ENVIRONMENT: ${{ inputs.environment }}
        TEST_TYPE: ${{ inputs.profile }}
        GITHUB_RUN_NUMBER: ${{ inputs.github_run_number }}
        CUSTOM_COMMAND_SETUP: ${{ inputs.custom_command_setup }}
        DOTENV_PRIVATE_KEY_SECRET_DEV: ${{ inputs.dotenv_private_key_secret_dev }}
        DOTENV_PRIVATE_KEY_SECRET_STG: ${{ inputs.dotenv_private_key_secret_stg }}

    # - name: create test run on testrails
    #   shell: bash
    #   if: "${{ inputs.create_test_run == 'true' && always() }}"
    #   run: bun run createTestrunTestrail

    - name: run automation test
      shell: bash
      if: always()
      run: ${{ inputs.custom_command_run }}

    # - name: install rsync and bc
    #   shell: bash
    #   if: "${{ inputs.setup_rsync == 'true' && always() }}"
    #   run: sudo apt-get update && sudo apt-get install -y rsync && sudo apt-get install -y bc

    # - name: deploy reports to github pages
    #   uses: kitabisa/composite-actions/sdet/deploy@api
    #   if: always()
    #   with:
    #     custom_command_report_folder: ${{ inputs.custom_command_report_folder }}
    #     profile: ${{ inputs.custom_command_report_subfolder || inputs.profile }}

    # - name: insert result to testrails
    #   shell: bash
    #   if: "${{ inputs.insert_testrails == 'true' && always() }}"
    #   run: bun run insertResultTestrail

    # - name: build and deploy to gh pages
    #   if: "${{ inputs.deploy_gh_pages == 'true' && always() }}"
    #   uses: kitabisa/composite-actions/sdet/tools/dispatch@v2
    #   with:
    #     token: ${{ inputs.gh_token }}
    #     target_branch: ${{ github.ref }}
    #     repository_name: ${{ github.repository }}
    #     repository_owner: ${{ github.repository_owner }}
    #     target_workflow: build-and-deploy-gh-pages.yaml
    #     workflow_timeout_seconds: 300

    # - name: send report to slack
    #   shell: bash
    #   if: always()
    #   run: ${{ inputs.custom_command_send_report_to_slack }}

    # - name: delay
    #   shell: bash
    #   if: "${{ inputs.trigger_automation_test_api_when_deploy == 'true' }}"
    #   run: sleep 300

    # - name: install github cli
    #   uses: sersoft-gmbh/setup-gh-cli-action@v2
    #   if: "${{ inputs.trigger_automation_test_api_when_deploy == 'true' }}"
    #   with:
    #     version: stable

    # - name: trigger automation test api when deploy completed
    #   shell: bash
    #   if: "${{ inputs.trigger_automation_test_api_when_deploy == 'true' }}"
    #   run: |
    #     gh workflow run -R kitabisa/qorin .github/workflows/manual-trigger-deploy-stg.yaml -f profile=${{ inputs.service_name }} --ref master
    #   env:
    #     GITHUB_TOKEN: ${{ inputs.gh_token }}
