name: "Frontend build"
description: "Frontend composite build"

inputs:
  # Required
  credentials_json:
    required: true
    description: "GCP credentials services account"
    type: string

  project_id:
    required: true
    description: "GCP project id"
    type: string

  # Optional
  cache:
    required: false
    description: "Run action cache"
    default: "true"
    type: string

  setup_nvmrc:
    required: false
    description: "Setup node custom by nvmrc"
    default: "false"
    type: string

  setup_pnpm:
    required: false
    description: "Setup pnpm and cache modules"
    default: "false"
    type: string

  setup_yarn:
    required: false
    description: "Setup yarn and cache modules"
    default: "false"
    type: string

  setup_bun:
    required: false
    description: "Setup bun and cache modules"
    default: "false"
    type: string

  using_nextjs:
    required: false
    description: "Setup next.js cache modules"
    default: "false"
    type: string

  working_directory:
    required: false
    description: "Set working directory"
    default: "."
    type: string

runs:
  using: "composite"
  steps:
    - name: Checking out repository
      uses: actions/checkout@v4

    - name: Setuptools frontend
      uses: kitabisa/composite-actions/frontend/tools/setuptools@v2
      with:
        setup_nvmrc: ${{ inputs.setup_nvmrc }}
        setup_yarn: ${{ inputs.setup_yarn }}
        setup_pnpm: ${{ inputs.setup_pnpm }}
        setup_bun: ${{ inputs.setup_bun }}
        cache: ${{ inputs.cache }}
        using_nextjs: ${{ inputs.using_nextjs }}
        working_directory: ${{ inputs.working_directory }}

    - name: Setup Gcloud credential
      uses: kitabisa/composite-actions/infra/tools/gcloud@v2
      with:
        project_id: ${{ inputs.project_id }}
        credentials_json: ${{ inputs.credentials_json }}
        docker_creds: false
        gke_creds: false
        artifact_creds: false

    - name: Install dependencies and build page
      uses: kitabisa/composite-actions/infra/tools/makefile@v2
      with:
        working_directory: ${{ inputs.working_directory }}
        install: true
        config: true
        build: true
