name: "Frontend deploy"
description: "Frontend composite deployment"

inputs:
  # Required
  artifact_registry_host:
    required: true
    description: "Artifact registry host"
    type: string

  artifact_registry_project_id:
    required: true
    description: "Artifact registry project id"
    type: string

  credentials_json:
    required: true
    description: "GCP credentials services account"
    type: string

  project_id:
    required: true
    description: "GCP project id"
    type: string

  gke_cluster_name:
    required: true
    description: "GKE cluster name"
    type: string

  gke_cluster_zone:
    required: true
    description: "GKE cluster location zone"
    type: string

  deploy_test:
    required: false
    description: "Run make deploy-test"
    default: "false"
    type: string

  rancher_host:
    required: true
    description: "Rancher host"
    type: string

  rancher_access_key:
    required: true
    description: "Rancher access key"
    type: string

  rancher_secret_key:
    required: true
    description: "Rancher secret key"
    type: string

  rancher_cluster_id:
    required: true
    description: "Rancher cluster id"
    type: string

  preview_url:
    required: false
    description: "Manual input preview url"
    default: ""
    type: string

  working_directory:
    required: false
    description: "Set working directory"
    default: "."
    type: string

  prune:
    required: false
    description: "Run make prune"
    default: false
    type: string

runs:
  using: "composite"
  steps:
    - name: Checking out repository
      uses: actions/checkout@v4

    - name: Setup Gcloud credential
      uses: kitabisa/composite-actions/infra/tools/gcloud@v2
      with:
        artifact_registry_host: ${{ inputs.artifact_registry_host }}
        credentials_json: ${{ inputs.credentials_json }}
        project_id: ${{ inputs.project_id }}
        gke_cluster_name: ${{ inputs.gke_cluster_name }}
        gke_cluster_zone: ${{ inputs.gke_cluster_zone }}

    - name: Deploy & Prune
      uses: kitabisa/composite-actions/infra/tools/makefile@v2
      with:
        working_directory: ${{ inputs.working_directory }}
        project_id: ${{ inputs.project_id }}
        artifact_registry_host: ${{ inputs.artifact_registry_host }}
        artifact_registry_project_id: ${{ inputs.artifact_registry_project_id }}
        deploy_test: ${{ inputs.deploy_test }}
        prune: ${{ inputs.prune }}
        deploy: true

    - name: Rancher ns mover
      uses: kitabisa/composite-actions/infra/tools/rancher@v2
      with:
        working_directory: ${{ inputs.working_directory }}
        rancher_host: ${{ inputs.rancher_host }}
        rancher_access_key: ${{ inputs.rancher_access_key }}
        rancher_secret_key: ${{ inputs.rancher_secret_key }}
        rancher_cluster_id: ${{ inputs.rancher_cluster_id }}

    - name: Comment preview url
      if: "${{ inputs.preview_url != '' && github.event.pull_request.number != '' }}"
      uses: peter-evans/create-or-update-comment@v4
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          Open the application by accessing these URL: [${{ inputs.preview_url }}](https://${{ inputs.preview_url }})

    - name: Get URL
      if: ${{ github.event.pull_request.number != '' }}
      id: get-url
      shell: bash
      run: |
        app_name=$(make get-app-name)
        ROUTES=$(kubectl get httproutes --namespace "$app_name" -o jsonpath='{range .items[*]}{.spec.hostnames[*]}{"\n"}{end}' | grep -E '${{ github.event.pull_request.number }}' | uniq)
        COMMENT="Open the application by accessing these URL: \n"
        HAS_PUBLIC=false
        HAS_PRIVATE=false

        echo "$ROUTES"

        I=1
        while read -r line; do
          [ -z "$line" ] && continue
          if [[ ("$line" == *".xyz") || ("$line" == *".com") ]]; then
            HAS_PUBLIC=true
            COMMENT+="[$line](https://$line)\n"
          elif [[ "$line" == *".kt.bs" ]]; then
            HAS_PRIVATE=true
            COMMENT+="[$line](http://$line)\n"
          fi
          ((I++))
        done <<< "$ROUTES"

        if [[ "$HAS_PUBLIC" == true && "$HAS_PRIVATE" == true ]]; then
          COMMENT="Open the application by accessing these URLs: \n"
          while read -r line; do
            [ -z "$line" ] && continue
            if [[ "$line" == *".xyz" || "$line" == *".com" ]]; then
              COMMENT+="[$line](https://$line)\n"
            fi
          done <<< "$ROUTES"
        elif [[ "$HAS_PUBLIC" == false && "$HAS_PRIVATE" == true ]]; then
          COMMENT="Open the application by accessing these URLs: \n"
          while read -r line; do
            [ -z "$line" ] && continue
            if [[ "$line" == *".kt.bs" ]]; then
              COMMENT+="[$line](http://$line)\n"
            fi
          done <<< "$ROUTES"
        fi

        # Set output so we can use it in the next step
        echo "comment<<EOF" >> $GITHUB_OUTPUT
        echo -e "$COMMENT" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Comment preview url
      if: "${{ steps.get-url.outputs.comment != '' && github.event.pull_request.number != '' }}"
      uses: peter-evans/create-or-update-comment@v4
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: ${{ steps.get-url.outputs.comment }}
