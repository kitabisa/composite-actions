name: "Frontend deploy"
description: "Frontend composite deployment"

inputs:
  # Required
  artifact_registry_host:
    required: true
    description: "Artifact registry host"
    type: string

  artifact_registry_project_id:
    required: true
    description: "Artifact registry project id"
    type: string

  credentials_json:
    required: true
    description: "GCP credentials services account"
    type: string

  project_id:
    required: true
    description: "GCP project id"
    type: string

  gke_cluster_name:
    required: true
    description: "GKE cluster name"
    type: string

  gke_cluster_zone:
    required: true
    description: "GKE cluster location zone"
    type: string

  deploy_test:
    required: false
    description: "Run make deploy-test"
    default: "false"
    type: string

  rancher_host:
    required: true
    description: "Rancher host"
    type: string

  rancher_access_key:
    required: true
    description: "Rancher access key"
    type: string

  rancher_secret_key:
    required: true
    description: "Rancher secret key"
    type: string

  rancher_cluster_id:
    required: true
    description: "Rancher cluster id"
    type: string

  preview_url:
    required: false
    description: "Set preview url"
    default: ""
    type: string

  working_directory:
    required: false
    description: "Set working directory"
    default: "."
    type: string

  prune:
    required: false
    description: "Run make prune"
    default: false
    type: string

runs:
  using: "composite"
  steps:
    - name: Checking out repository
      uses: actions/checkout@v4

    - name: Setup Gcloud credential
      uses: kitabisa/composite-actions/infra/tools/gcloud@v2
      with:
        artifact_registry_host: ${{ inputs.artifact_registry_host }}
        credentials_json: ${{ inputs.credentials_json }}
        project_id: ${{ inputs.project_id }}
        gke_cluster_name: ${{ inputs.gke_cluster_name }}
        gke_cluster_zone: ${{ inputs.gke_cluster_zone }}

    - name: Deploy & Prune
      uses: kitabisa/composite-actions/infra/tools/makefile@v2
      with:
        working_directory: ${{ inputs.working_directory }}
        project_id: ${{ inputs.project_id }}
        artifact_registry_host: ${{ inputs.artifact_registry_host }}
        artifact_registry_project_id: ${{ inputs.artifact_registry_project_id }}
        deploy_test: ${{ inputs.deploy_test }}
        prune: ${{ inputs.prune }}
        deploy: true

    - name: Rancher ns mover
      uses: kitabisa/composite-actions/infra/tools/rancher@v2
      with:
        working_directory: ${{ inputs.working_directory }}
        rancher_host: ${{ inputs.rancher_host }}
        rancher_access_key: ${{ inputs.rancher_access_key }}
        rancher_secret_key: ${{ inputs.rancher_secret_key }}
        rancher_cluster_id: ${{ inputs.rancher_cluster_id }}

    - name: Get URL
      if: ${{ inputs.preview_url == '' && github.event.pull_request.number != '' }}
      id: url
      working-directory: ${{ inputs.working_directory }}
      shell: bash
      run: |
        app_name=$(make get-app-name)
        http_url=$(kubectl get httproutes --namespace "$app_name" -o jsonpath="{.items[*].spec.hostnames[0]}")
        echo "http-url=$http_url" >> "$GITHUB_OUTPUT"

    - name: Comment preview url
      if: "${{ steps.url.outputs.http-url == '' && github.event.pull_request.number != '' }}"
      uses: peter-evans/create-or-update-comment@v4
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          Open the application by accessing these URL: [${{ inputs.preview_url }}](http://${{ inputs.preview_url }})

    - name: Set up iteration and message
      id: set-variables
      shell: bash
      run: |
        # You can dynamically generate iteration values here
        ITERATION_COUNT=5
        COMMENT="Here are the iteration values:\n"

        for i in $(seq 1 $ITERATION_COUNT); do
          COMMENT+="Iteration $i\n"
        done

        # Set output so we can use it in the next step
        echo "comment<<EOF" >> $GITHUB_OUTPUT
        echo -e "$COMMENT" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Comment preview url
      if: "${{ steps.url.outputs.http-url != '' && github.event.pull_request.number != '' }}"
      uses: peter-evans/create-or-update-comment@v4
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          Open the application by accessing these URL: [${{ steps.set-variables.outputs.comment }}](http://${{ steps.set-variables.outputs.comment }})

    # - name: Comment preview url
    #   if: "${{ steps.url.outputs.http-url != '' && github.event.pull_request.number != '' }}"
    #   uses: peter-evans/create-or-update-comment@v4
    #   with:
    #     issue-number: ${{ github.event.pull_request.number }}
    #     body: |
    #       Open the application by accessing these URL: [${{ steps.url.outputs.http-url }}](http://${{ steps.url.outputs.http-url }})
