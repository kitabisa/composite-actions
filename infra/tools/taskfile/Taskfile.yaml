version: '3'

silent: false

vars:
  NAMESPACE:
    sh: kubectl get ns | grep -v -e maxwell -e NAME -e slack-devbot-helper | awk '{ print $1 }'

tasks:
  destroy-dev:
    desc: Destroy dev
    cmds:
      - for: { var: NAMESPACE }
        cmd: helm ls -n {{.ITEM}} | grep "\-dev" | awk '{ print $1 }' | xargs -I % helm delete -n {{.ITEM}} % 2> /dev/null
        ignore_error: true

  create-mysql-db:
    desc: Create a MySQL DB
    ignore_error: true
    cmds:
      - |
        mysql -h ${MYSQL_DEV_HOST} -u root -p${MYSQL_DEV_PASSWORD} -e "CREATE DATABASE IF NOT EXISTS ${DB_NAME};
        CREATE USER IF NOT EXISTS '${APP_NAME}'@'%' IDENTIFIED BY '${DB_PASSWORD}';
        GRANT ALL PRIVILEGES ON ${DB_NAME}.* TO '${APP_NAME}'@'%';
        FLUSH PRIVILEGES;"

  create-pgsql-db:
    desc: "Create a PostgreSQL DB"
    ignore_error: true
    cmds:
      - |
        #!/bin/bash
        export PGPASSWORD=$LOGIN_DB_PASSWORD

        # Create DB and user then grant user
        psql -h ${LOGIN_DB_HOST} -U postgres -c "DROP DATABASE IF EXISTS ${DB_NAME};" -c "CREATE DATABASE ${DB_NAME};"
        echo "host ${LOGIN_DB_HOST} DB name ${DB_NAME}"

        # Create user and grant user
        psql -h ${LOGIN_DB_HOST} -U postgres -c "DROP USER IF EXISTS ${APP_NAME};" -c "CREATE USER ${APP_NAME} WITH PASSWORD '${DB_PASSWORD}';" -c "GRANT ALL PRIVILEGES ON DATABASE ${DB_NAME} TO ${APP_NAME};"
        echo "user ${DB_NAME}"
        unset PGPASSWORD

  delete-pgsql-db:
    desc: "Delete a Single PostgreSQL DB"
    ignore_error: true
    cmds:
      - |
        #!/bin/bash
        # Set environment variable for password (optional)
        export PGPASSWORD=$LOGIN_DB_PASSWORD

        # Execute the DROP DATABASE command
        psql -U postgres -h "$LOGIN_DB_HOST" -c "DROP DATABASE \"$DB_NAME\";" -c "DROP USER IF EXISTS ${APP_NAME};"

        # Unset the password environment variable for security
        unset PGPASSWORD
        echo "Database '$DB_NAME' has been deleted."

  delete-mysql-db:
    desc: "Delete a Single Mysql DB"
    ignore_error: true
    cmds:
      - |
        #!/bin/bash
        # Execute the DROP DATABASE command
        mysql -u "$MYSQL_DEV_USER" -h "${MYSQL_DEV_HOST}" -p"${MYSQL_DEV_PASSWORD}" -e "DROP DATABASE $DB_NAME;"

        echo "Database '$DB_NAME' has been deleted."

  delete-all-mysql-db:
    desc: "Delete All Mysql DB"
    ignore_error: true
    silent: false
    cmds:
      - |
        #!/bin/bash
        databases=$(mysql -u"$MYSQL_DEV_USER" -p"$MYSQL_DEV_PASSWORD" -h"$MYSQL_DEV_HOST" -e "SHOW DATABASES;" | grep -Ev "(Database|information_schema|performance_schema|mysql|sys)")
        # Loop through each database and drop it
        for db in $databases; do
          echo "Dropping database: $db"
          mysql -u"$MYSQL_USER" -p"$MYSQL_PASS" -h"$MYSQL_HOST" -e "DROP DATABASE $db;"
        done
        echo "All user databases have been dropped."

  delete-all-pgsql-db:
    desc: "Delete All Mysql DB"
    ignore_error: true
    silent: false
    cmds:
      - |
        # Export the password so it can be used by psql without prompting
        export PGPASSWORD="$LOGIN_DB_PASSWORD"

        # Get a list of databases excluding the system databases
        databases=$(psql -U postgres -h "$LOGIN_DB_HOST" -p "5432" -t -c "SELECT datname FROM pg_database WHERE datname NOT IN ('postgres', 'template0', 'template1');")

        # Loop through each database and drop it
        for db in $databases; do
          echo "Dropping database: $db"
          psql -U postgres -h "$LOGIN_DB_HOST" -p "5432" -c "DROP DATABASE \"$db\";"
        done

        echo "All user databases have been dropped."
