name: "Frontend build"
description: "Frontend composite deployment"

inputs:
  install:
    required: false
    description: "Run make install"
    default: true
    type: boolean

  config:
    required: false
    description: "Run make config"
    default: true
    type: boolean

  build:
    required: false
    description: "Run make build"
    default: true
    type: boolean

  package:
    required: false
    description: "Run make package"
    default: true
    type: boolean

  cache:
    required: false
    description: "Run action cache"
    default: true
    type: boolean

  project_id:
    required: true
    description: "GCP project id"
    type: string

  credentials_json:
    required: true
    description: "GCP credentials services account"
    type: string

  gcr_host:
    required: true
    description: "GCP container registry host"
    type: string

  setup_pnpm:
    required: false
    description: "Setup pnpm and cache modules"
    default: false
    type: boolean

  setup_yarn:
    required: false
    description: "Setup yarn and cache modules"
    default: false
    type: boolean

  chartmuseum_host:
    required: true
    description: "ChartMuseum host"
    type: string

  chartmuseum_user:
    required: true
    description: "ChartMuseum user"
    type: string

  chartmuseum_pass:
    required: true
    description: "ChartMuseum password"
    type: string

  working_directory:
    required: false
    description: "Set working directory"
    default: "."
    type: string

  pnpm_version:
    required: false
    description: "Setup pnpm version"
    default: "latest"
    type: string

  using_nextjs:
    required: false
    description: "Setup next.js cache modules"
    default: false
    type: boolean

  using_cdn:
    required: false
    description: "Setup cdn for static assets"
    default: false
    type: boolean

  cdn_aws_s3_bucket:
    required: false
    description: "CDN aws s3 bucket"
    default: ""
    type: string

  cdn_aws_access_key_id:
    required: false
    description: "CDN aws access key id"
    default: ""
    type: string

  cdn_aws_secret_access_key:
    required: false
    description: "CDN aws secret access key"
    default: ""
    type: string

  cdn_aws_region:
    required: false
    description: "CDN aws region"
    default: ""
    type: string

  cdn_source_dir:
    required: false
    description: "CDN source dir"
    default: ""
    type: string

  cdn_dest_dir:
    required: false
    description: "CDN dest dir"
    default: ""
    type: string

outputs:
  build-time:
    description: "Define build time"
    value: ${{ steps.build-push.outputs.build-time }}

runs:
  using: "composite"
  steps:
    - name: Checking out repository
      uses: actions/checkout@v3

    - name: Setup node.js
      uses: actions/setup-node@v3
      with:
        node-version-file: "${{ inputs.working_directory }}/.nvmrc"
        check-latest: true

    - name: Setup gcloud
      if: "${{ inputs.config == 'true' }}"
      uses: kitabisa/composite-actions/packages/gcloud@main
      with:
        project_id: ${{ inputs.project_id }}
        credentials_json: ${{ inputs.credentials_json }}

    - name: Setup docker buildx
      if: "${{ inputs.build == 'true' }}"
      uses: kitabisa/composite-actions/packages/buildx@main
      with:
        project_id: ${{ inputs.project_id }}
        gcr_host: ${{ inputs.gcr_host }}
        cache: ${{ inputs.cache }}

    - name: Setup yarn
      if: "${{ inputs.setup_yarn == 'true' }}"
      uses: kitabisa/composite-actions/packages/yarn@main
      with:
        working_directory: ${{ inputs.working_directory }}
        using_nextjs: ${{ inputs.using_nextjs }}
        cache: ${{ inputs.cache }}

    - name: Setup pnpm
      if: "${{ inputs.setup_pnpm == 'true' }}"
      uses: kitabisa/composite-actions/packages/pnpm@main
      with:
        working_directory: ${{ inputs.working_directory }}
        using_nextjs: ${{ inputs.using_nextjs }}
        pnpm_version: ${{ inputs.pnpm_version }}
        cache: ${{ inputs.cache }}

    - name: Build push
      id: build-push
      uses: kitabisa/composite-actions/packages/makefile@main
      with:
        working_directory: ${{ inputs.working_directory }}
        project_id: ${{ inputs.project_id }}
        gcr_host: ${{ inputs.gcr_host }}
        chartmuseum_host: ${{ inputs.chartmuseum_host }}
        chartmuseum_user: ${{ inputs.chartmuseum_user }}
        chartmuseum_pass: ${{ inputs.chartmuseum_pass }}
        app_custom_version_skip: 2
        install: ${{ inputs.install }}
        config: ${{ inputs.config }}
        build: ${{ inputs.build }}
        package: ${{ inputs.package }}

    - name: Manage CDN static
      if: "${{ inputs.using_cdn == 'true' }}"
      uses: kitabisa/composite-actions/packages/cdn@main
      with:
        cdn_aws_s3_bucket: ${{ inputs.cdn_aws_s3_bucket }}
        cdn_aws_access_key_id: ${{ inputs.cdn_aws_access_key_id }}
        cdn_aws_secret_access_key: ${{ inputs.cdn_aws_secret_access_key }}
        cdn_aws_region: ${{ inputs.cdn_aws_region }}
        cdn_source_dir: ${{ inputs.cdn_source_dir }}
        upload: true
        upload_path: ${{ steps.build-push.outputs.app-name }}/${{ steps.build-push.outputs.app-version }}/${{ inputs.cdn_dest_dir }}
        delete: ${{ steps.build-push.outputs.app-version != steps.build-push.outputs.app-custom-version }}
        delete_path: ${{ steps.build-push.outputs.app-name }}/${{ steps.build-push.outputs.app-custom-version }}
