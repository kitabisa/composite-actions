name: "Generate Coverage"
description: "generate coverage badge for readme"

inputs:
  working_directory:
    required: false
    description: "Set working directory"
    default: "."

  badge_path:
    required: false
    description: "badge path for coverage"
    default: ".github/badges/code-coverage.svg"

runs:
  using: "composite"
  steps:
    - name: Set env
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      run: |-
        echo $(go tool cover -func coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}') > coverage-master.txt
        echo "current_coverage=$(go tool cover -func coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}')" >> $GITHUB_ENV

    - name: Create destination directory
      shell: bash
      run: mkdir -p "${{ inputs.badge_path }}%/*"

    - name: Generate badge SVG image
      uses: emibcn/badge-action@v2.0.3
      id: badge
      with:
        label: 'Code coverage'
        status: ${{ env.current_coverage }}
        color: 'green'
        path: ${{ inputs.badge_path }}

    - name: Verify Changed files
      uses: tj-actions/verify-changed-files@v16
      id: verify-changed-files
      with:
        files: ${{ inputs.badge_path }}

    - name: Upload badge as artifact
      if: steps.verify-changed-files.outputs.files_changed == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: badge
        path: ${{ inputs.badge_path }}
        if-no-files-found: error

    - name: Push coverage master to git
      if: steps.verify-changed-files.outputs.files_changed == 'true'
      uses: stefanzweifel/git-auto-commit-action@v5
      continue-on-error: true
      with:
        commit_message: 'coverage: updated coverage [skip ci]'
        file_pattern: '${{ inputs.working_directory }}/coverage-master.txt ${{ inputs.badge_path }}'
