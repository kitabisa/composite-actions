name: "CI Build"
description: "Build and push docker image"

inputs:
  # Required
  gh_token:
    required: true
    description: "Github token"

  artifact_registry_host:
    required: true
    description: "Artifact registry host"
    type: string

  artifact_registry_project_id:
    required: true
    description: "Artifact registry project id"
    type: string

  credentials_json:
    required: true
    description: "GCP credentials services account"
    type: string

  project_id:
    required: true
    description: "GCP project id"
    type: string

  gke_cluster_name:
    required: true
    description: "GKE cluster name"
    type: string

  gke_cluster_zone:
    required: true
    description: "GKE cluster location zone"
    type: string

  custom_command_flag:
    required: false
    description: "custom command flag"
    default: "false"

  custom_command:
    required: false
    description: "custom command"
    default: "echo no command"

  param:
    required: false
    description: "argument for service name"
    default: ""
    type: string

  env:
    required: true
    description: "environment to deploy to"
    default: "dev"

  rancher_host:
    required: true
    description: "Rancher host"

  rancher_access_key:
    required: true
    description: "Rancher access key"

  rancher_secret_key:
    required: true
    description: "Rancher secret key"

  rancher_cluster_id:
    required: true
    description: "Rancher cluster id"

  working_directory:
    required: false
    description: "Set working directory"
    default: "."
    type: string

  deploy:
    required: false
    description: "Run make deploy"
    default: "true"
    type: string

  deploy-kj:
    required: false
    description: "Run make deploy-kj"
    default: "false"
    type: string

  deploy_test:
    required: false
    description: "Run make deploy-test"
    default: "false"
    type: string

  create_mysql_dev:
    required: false
    description: "create DB MySQL dev"
    default: "false"
    type: string

  create_pgsql_dev:
    required: false
    description: "create DB PostgreSQL dev"
    default: "false"
    type: string

runs:
  using: "composite"
  steps:
    - name: Create env deployment
      uses: chrnorm/deployment-action@v2
      id: deployment
      with:
        token: ${{ inputs.gh_token }}
        environment: ${{ inputs.env }}

    - name: Checking out repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ inputs.gh_token }}

    - name: setup custom command
      if: ${{ inputs.custom_command_flag == 'true' }}
      shell: bash
      run: ${{ inputs.custom_command }}

    - name: Setup Gcloud credential
      uses: kitabisa/composite-actions/infra/tools/gcloud@v2
      with:
        artifact_registry_host: ${{ inputs.artifact_registry_host }}
        project_id: ${{ inputs.project_id }}
        credentials_json: ${{ inputs.credentials_json }}
        gke_cluster_name: ${{ inputs.gke_cluster_name }}
        gke_cluster_zone: ${{ inputs.gke_cluster_zone }}

    - name: Deploy
      uses: kitabisa/composite-actions/infra/tools/makefile@v2
      with:
        param: ${{ inputs.param }}
        working_directory: ${{ inputs.working_directory }}
        project_id: ${{ inputs.project_id }}
        artifact_registry_host: ${{ inputs.artifact_registry_host }}
        artifact_registry_project_id: ${{ inputs.artifact_registry_project_id }}
        deploy: ${{ inputs.deploy }}
        deploy-kj: ${{ inputs.deploy-kj }}
        deploy_test: ${{ inputs.deploy_test }}

    - name: Create MySQL Database dev
      if: "${{ (inputs.create_mysql_dev == 'true') && (inputs.deploy_test != 'true') }}"
      uses: kitabisa/composite-actions/infra/tools/taskfile@feat/update-taskfile
      with:
        project_id: ${{ inputs.project_id }}
        artifact_registry_host: ${{ inputs.artifact_registry_host }}
        artifact_registry_project_id: ${{ inputs.artifact_registry_project_id }}
        login_db_host: ${{ secrets.MYSQL_DEV_HOST }}

    - name: Create PostgreSQL Database dev
      if: "${{ (inputs.create_pgsql_dev == 'true') && (inputs.deploy_test != 'true') }}"
      uses: kitabisa/composite-actions/infra/tools/taskfile@feat/update-taskfile
      with:
        project_id: ${{ inputs.project_id }}
        artifact_registry_host: ${{ inputs.artifact_registry_host }}
        artifact_registry_project_id: ${{ inputs.artifact_registry_project_id }}
        login_db_host: ${{ secrets.PGSQL_DEV_HOST }}

    - name: Rancher ns mover
      if: "${{ inputs.deploy_test != 'true' }}"
      uses: kitabisa/composite-actions/infra/tools/rancher@v2
      with:
        working_directory: ${{ inputs.working_directory }}
        param: ${{ inputs.param }}
        deploy: ${{ inputs.deploy }}
        deploy-kj: ${{ inputs.deploy-kj }}
        rancher_host: ${{ inputs.rancher_host }}
        rancher_access_key: ${{ inputs.rancher_access_key }}
        rancher_secret_key: ${{ inputs.rancher_secret_key }}
        rancher_cluster_id: ${{ inputs.rancher_cluster_id }}

    - uses: chrnorm/deployment-status@v2
      if: success()
      name: Set env deployment success
      with:
        token: ${{ inputs.gh_token }}
        state: "success"
        deployment-id: ${{ steps.deployment.outputs.deployment_id }}

    - uses: chrnorm/deployment-status@v2
      if: failure()
      name: Set env deployment failure
      with:
        token: ${{ inputs.gh_token }}
        state: "failure"
        deployment-id: ${{ steps.deployment.outputs.deployment_id }}
