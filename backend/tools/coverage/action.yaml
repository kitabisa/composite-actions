name: "Generate Coverage"
description: "generate coverage badge for readme"

inputs:
  working_directory:
    required: false
    description: "Set working directory"
    default: "."
    type: string

  setup_git:
    required: false
    description: "Setup git"

  setup_go:
    required: false
    description: "Setup Go"

  cache_dependency_path:
    required: false
    description: "go sum location"
    default: "go.sum"

  go_version:
    required: false
    description: "go version"
    default: "^1.13.1"

  badge_path:
    required: false
    description: "badge path for coverage"
    default: ".github/badges/code-coverage.svg"

  custom_command_flag:
    required: false
    description: "custom command flag"
    default: "false"

  custom_command:
    required: false
    description: "custom command"
    default: "echo no command"

  unit_test_command:
    required: false
    description: "unit test command"
    default: "go test ./internal/... -coverprofile=coverage.out -covermode=atomic"

runs:
  using: "composite"
  steps:
    - name: Checking current repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ inputs.gh_token }}

    - name: Setuptools backend
      uses: kitabisa/composite-actions/backend/tools/setuptools@v2
      with:
        setup_git: true
        setup_go: true

    - name: Generate Master Coverage
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      run: |-
        echo "current_master_coverage=$(cat coverage-master.txt)" >> $GITHUB_ENV

    - name: Custom Command
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      if: "${{ inputs.custom_command_flag == 'true' }}"
      run: ${{ inputs.custom_command }}

    - name: Run Unit tests
      id: unit-test-current
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      run: |-
        ${{ inputs.unit_test_command }}
        echo "current_coverage=$(go tool cover -func coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}')" >> $GITHUB_ENV

    - name: Create destination directory
      shell: bash
      run: mkdir -p "${{ inputs.badge_path }}%/*"

    - name: Generate badge SVG image
      uses: emibcn/badge-action@v2.0.2
      id: badge
      with:
        label: 'Code coverage'
        status: ${{ env.current_coverage }}
        color: 'green'
        path: ${{ inputs.badge_path }}

    - name: Upload badge as artifact
      uses: actions/upload-artifact@v3
      with:
        name: badge
        path: ${{ inputs.badge_path }}
        if-no-files-found: error

    - name: Push coverage master to git
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: 'coverage: updated master coverage [skip ci]'
        file_pattern: ./service/coverage-master.txt

    - name: Push badge to git
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: 'coverage: updated coverage badge [skip ci]'
        file_pattern: ${{ inputs.badge_path }}
