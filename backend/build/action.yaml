name: "CI Build"
description: "Build and push docker image"

inputs:
  # Required
  artifact_registry_host:
    required: true
    description: "Artifact registry host"
    type: string

  artifact_registry_project_id:
    required: true
    description: "Artifact registry project id"
    type: string

  credentials_json:
    required: true
    description: "GCP credentials services account"
    type: string

  project_id:
    required: true
    description: "GCP project id"
    type: string

  # Optional
  setup_git:
    required: false
    description: "Setup git and cache modules"
    default: false
    type: string

  setup_go:
    required: false
    description: "Setup go and cache modules"
    default: false
    type: string

  setup_gcloud:
    required: false
    description: "Setup gcloud and cache modules"
    default: false
    type: string

  setup_buildx:
    required: false
    description: "Setup buildx and cache modules"
    default: false
    type: string

  cache_dependency_path:
    required: false
    description: "go sum location"
    default: "go.sum"

  go_version:
    required: false
    description: "go version"
    default: "^1.13.1"

  build:
    required: false
    description: "Run make build"
    default: true
    type: string

  build_push_image:
    required: false
    description: "build and push image for deployment"
    default: "false"

  build_push_image_swagger:
    required: false
    description: "build and push image for swagger"
    default: "false"

  build_push_image_mockoon:
    required: false
    description: "build and push image for mockoon"

  swagger_script_path:
    required: false
    description: "swagger script path"

  openapi_input_file:
    required: false
    description: "openapi input file"

  openapi_output_file:
    required: false
    description: "openapi output file"

  working_directory:
    required: false
    description: "Set working directory"
    default: "."
    type: string

runs:
  using: "composite"
  steps:
    - name: Checking out repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ inputs.gh_token }}

    - name: Setuptools backend
      uses: kitabisa/composite-actions/backend/tools/setuptools@v2
      with:
        setup_git: true
        setup_go: true

    - name: Setuptools infra
      uses: kitabisa/composite-actions/infra/tools/setuptools@v2
      with:
        setup_gcloud: true
        setup_buildx: true

    - name: Setup Gcloud credential
      uses: kitabisa/composite-actions/infra/tools/gcloud@v2
      with:
        artifact_registry_host: ${{ inputs.artifact_registry_host }}
        credentials_json: ${{ inputs.credentials_json }}
        project_id: ${{ inputs.project_id }}

    - name: Build application
      id: build-app
      uses: kitabisa/composite-actions/infra/tools/makefile@v2
      with:
        build: ${{ inputs.build }}
        working_directory: ${{ inputs.working_directory }}
        project_id: ${{ inputs.project_id }}
        artifact_registry_host: ${{ inputs.artifact_registry_host }}
        artifact_registry_project_id: ${{ inputs.artifact_registry_project_id }}
        package: ${{ inputs.build_push_image }}

    - name: Build, tag, and push Docker image Swagger
      if: "${{ inputs.build_push_image_swagger == 'true' }}"
      uses: kitabisa/composite-actions/backend/tools/swagger@v2
      with:
        project_id: ${{ inputs.project_id }}
        artifact_registry_host: ${{ inputs.artifact_registry_host }}
        artifact_registry_project_id: ${{ inputs.artifact_registry_project_id }}
        openapi_input_file: ${{ inputs.openapi_input_file }}
        openapi_output_file: ${{ inputs.openapi_output_file }}
        swagger_script_path: ${{ inputs.swagger_script_path }}

    # if you require to build mockoon image for 3rd party mocking
    - name: Build, tag, and push Docker image Mockoon
      shell: bash
      if: "${{ inputs.build_push_image_mockoon == 'true' }}"
      env:
        DOCKER_REPOSITORY: ${{ inputs.artifact_registry_host }}/${{ inputs.project_id }}/images
      run: |-
        make package-mockoon
